# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# Start on DP-3 (I prefer it)
focus output DP-3

# Autostart applications
exec mako

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi -i --show drun | xargs swaymsg exec --

# Set window properties
for_window [app_id="cli-notif"] sticky enable, floating enable, move position center, resize set 60 ppt 60 ppt

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output DP-3 bg ~/.config/wallpaper2.png fill
output HDMI-A-1 bg ~/.config/burning.png fill
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output HDMI-A-1 mode 1920x1080@75Hz position 0,128
output DP-3 mode 2560x1440@165Hz position 1920,0
output DP-2 disable

# Lock workspaces to specific monitor outputs
workspace number 1 output HDMI-A-1
workspace number 2 output DP-3

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# lock screen after 5 minutes, turn it off after 8
 exec swayidle -w \
	timeout 300 'swaylock -e -f -i ~/.config/wallpaper-blur.jpg' \
	timeout 480 'swaymsg "output \* dpms off"' \
	resume 'swaymsg "output \* dpms on"'
# do it manually
bindsym $mod+Ctrl+l exec swaylock -e -f -i ~/.config/wallpaper-blur.jpg &&

# Prevent swayidle from running if firefox is fullscreen (watching videos)
for_window [app_id="firefox"] inhibit_idle fullscreen

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:

    # Take screenshot of focused desktop
    bindsym Print exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name')
    # Take screenshot of selected region
    bindsym Shift+Print exec grim -g "$(slurp)"
    # Take screenshot of selected region and copy it to clipboard
    bindsym Ctrl+Print exec grim -g "$(slurp)" - | wl-copy
    # Take a pixel and print its color value
    bindsym Mod1+Print exec ~/.config/sway/colorpick.sh

    # Increase/Lower Volume
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Open programs!
    bindsym $mod+Shift+f exec firefox
    bindsym $mod+Shift+d exec flatpak run com.discordapp.Discord
    bindsym $mod+Shift+s exec flatpak run com.spotify.Client

    # Quickly edit files
    bindsym $mod+Shift+e mode "$edit"

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod++f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Simple poweroff menu

set $power Leaving? [P]oweroff, [R]eboot, [L]ogout, [C]ancel
mode "$power" {
    bindsym p exec poweroff
    bindsym r exec reboot
    bindsym l exec swaymsg exit
    bindsym c mode "default"
    bindsym Escape mode "default"
}

set $edit Edit which config? [S]way, [W]aybar, [B]ar Style, [C]ancel
mode "$edit" {
    bindsym s exec kitty --detach nvim ~/.config/sway/config ; mode "default"
    bindsym w exec kitty --detach nvim ~/.config/waybar/config ; mode "default"
    bindsym b exec kitty --detach nvim ~/.config/waybar/style.css ; mode "default"
    bindsym c mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+p mode "$power"
# set gaps
smart_gaps on
gaps inner 10
gaps outer 7
# set borders
default_border pixel 2
smart_borders on
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

# Set colors for the borders
client.focused #2e3440 #81A1C1 #eceff4
client.focused_inactive #2e3440 #4C566A #eceff4 
client.unfocused #2e3440 #4C566A #eceff4

# idk
xwayland enable

include /etc/sway/config.d/*
